/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DelphsTable, DelphsTableInterface } from "../DelphsTable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
      {
        internalType: "address",
        name: "diceRollerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTwoRollsPerBlock",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "random",
        type: "bytes32",
      },
    ],
    name: "DiceRolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roll",
        type: "uint256",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "TableCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blockOfRoll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "playerAddresses",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "statSeeds",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "createAndStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address[]",
        name: "playerAddresses",
        type: "address[]",
      },
      {
        internalType: "bytes32[]",
        name: "statSeeds",
        type: "bytes32[]",
      },
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
    ],
    name: "createTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "destinations",
    outputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "int64",
        name: "x",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "y",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "roll",
        type: "uint256",
      },
    ],
    name: "destinationsForRoll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "int64",
            name: "x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "y",
            type: "int64",
          },
        ],
        internalType: "struct DelphsTable.Destination[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollTheDice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roller",
    outputs: [
      {
        internalType: "contract IDiceRoller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rolls",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "seeds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int64",
        name: "x",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "y",
        type: "int64",
      },
    ],
    name: "setDestination",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
    ],
    name: "statsForPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defense",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
        ],
        internalType: "struct DelphsTable.Stats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tables",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gameLength",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001a7938038062001a798339810160408190526200003491620001b0565b6001600160a01b03808416608052821660a052620000737fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758262000089565b6200008060008262000089565b505050620001fa565b62000095828262000099565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000095576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000f76200013b565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001526200015760201b62000e301760201c565b905090565b6080516000906001600160a01b031633036200017a575060131936013560601c90565b620001526200018f60201b62000e791760201c565b3390565b80516001600160a01b0381168114620001ab57600080fd5b919050565b600080600060608486031215620001c657600080fd5b620001d18462000193565b9250620001e16020850162000193565b9150620001f16040850162000193565b90509250925092565b60805160a05161184b6200022e6000396000818161020101526108260152600081816102930152610e34015261184b6000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c806375b238fc116100c3578063a217fddf1161007c578063a217fddf146103c9578063ae383a4d146103d1578063d3098b9a146103da578063d547741f14610442578063e0e543d014610455578063f15c95491461047557600080fd5b806375b238fc1461031f5780637d789dee14610346578063863d92881461034e578063907efe001461036157806391d14854146103965780639424732e146103a957600080fd5b80632f2ff15d116101155780632f2ff15d1461023b578063361508521461025057806336568abe14610270578063572b6c05146102835780635d69f16c146102c35780637213b814146102e357600080fd5b8063015a18ed1461015d57806301ffc9a71461018357806313870132146101a6578063248a9ca3146101b95780632d1dc122146101dc5780632f09177d146101fc575b600080fd5b61017061016b366004611323565b610488565b6040519081526020015b60405180910390f35b61019661019136600461133c565b610544565b604051901515815260200161017a565b6101966101b436600461137d565b61057b565b6101706101c7366004611323565b60009081526020819052604090206001015490565b6101706101ea366004611323565b60036020526000908152604090205481565b6102237f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161017a565b61024e6102493660046113d0565b61066d565b005b61026361025e366004611323565b610697565b60405161017a91906113fc565b61024e61027e3660046113d0565b6106fc565b610196610291366004611440565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6101706102d1366004611323565b60026020526000908152604090205481565b6102f66102f136600461145b565b61078f565b604080516001600160a01b039094168452600792830b6020850152910b9082015260600161017a565b6101707fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b6101706107f0565b61024e61035c3660046114d3565b610951565b61037461036f3660046113d0565b610973565b604080518251815260208084015190820152918101519082015260600161017a565b6101966103a43660046113d0565b610b04565b6103bc6103b7366004611323565b610b2d565b60405161017a9190611566565b610170600081565b61017060015481565b61041a6103e8366004611323565b6005602081905260009182526040909120805460038201546004830154929093015490926001600160a01b0316919084565b604080519485526001600160a01b03909316602085015291830152606082015260800161017a565b61024e6104503660046113d0565b610b9b565b6104686104633660046115a7565b610bc0565b60405161017a91906115c9565b61024e6104833660046114d3565b610c60565b600081815260056020526040812060038101546001600160a01b03166104ac610e7d565b6001600160a01b0316146104d2576040516282b42960e81b815260040160405180910390fd5b6004810154156104f557604051631fbde44560e01b815260040160405180910390fd5b600060015460016105069190611649565b60048301819055604051909150819085907f3a5803cb6dcb9c83b0584d712b7825e7e9fa6243be3cde9e798681f5c091e65c90600090a39392505050565b60006001600160e01b03198216637965db0b60e01b148061057557506301ffc9a760e01b6001600160e01b03198316145b92915050565b600080610586610e7d565b60008681526005602052604090209091506105a46001820183610e87565b6105c0576040516282b42960e81b815260040160405180910390fd5b50600094855260046020908152604080872060018054895290835281882082516060810184526001600160a01b039586168152600798890b8186019081529790980b92880192835280548083018255908952929097209551600290920290950180549451919092166001600160e01b031990941693909317600160a01b67ffffffffffffffff948516021781559251928401805467ffffffffffffffff1916939092169290921790555090565b60008281526020819052604090206001015461068881610ef4565b6106928383610f08565b505050565b6000818152600560209081526040918290206002018054835181840281018401909452808452606093928301828280156106f057602002820191906000526020600020905b8154815260200190600101908083116106dc575b50505050509050919050565b610704610e7d565b6001600160a01b0316816001600160a01b0316146107815760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b61078b8282610f8d565b5050565b600460205282600052604060002060205281600052604060002081815481106107b757600080fd5b6000918252602090912060029091020180546001909101546001600160a01b0382169450600160a01b909104600790810b93500b905083565b600154600090815260036020526040812054439003610822576040516374f70e7960e11b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aacc5a176040518163ffffffff1660e01b8152600401602060405180830381865afa158015610882573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108a69190611661565b9050806002600060015460016108bc9190611649565b815260200190815260200160002081905550436003600060015460016108e29190611649565b815260200190815260200160002081905550600160008154809291906109079061167a565b9190505550436001547f61a648c0140ef625babe35b3bc5ba2a28852bd10a17c53f6d9f3831b21096cd78360405161094191815260200190565b60405180910390a3505060015490565b61096087878787878787610c60565b61096987610488565b5050505050505050565b61099760405180606001604052806000815260200160008152602001600081525090565b600083815260056020908152604080832060048101548452600290925290912054806109f45760405162461bcd60e51b815260206004820152600c60248201526b1b9bc81cdd185d1cc81e595d60a21b6044820152606401610778565b604080516060810190915280610a50610a4884610a31896080860160609190911b6001600160601b0319168152606160f81b601482015260150190565b6040516020818303038152906040526103e8611010565b610190611051565b8152602001610aa8610aa18488604051602001610a8a919060609190911b6001600160601b0319168152601960fa1b601482015260150190565b604051602081830303815290604052610320611010565b60c8611051565b8152602001610af9610aa18488604051602001610ae2919060609190911b6001600160601b0319168152600d60fb1b601482015260150190565b6040516020818303038152906040526102bc611010565b905295945050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b6000818152600560209081526040918290206001018054835181840281018401909452808452606093928301828280156106f057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610b725750505050509050919050565b600082815260208190526040902060010154610bb681610ef4565b6106928383610f8d565b60008281526004602090815260408083208484528252808320805482518185028101850190935280835260609492939192909184015b82821015610c54576000848152602090819020604080516060810182526002860290920180546001600160a01b0381168452600160a01b9004600790810b84860152600191820154900b918301919091529083529092019101610bf6565b50505050905092915050565b610c8c7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756103a4610e7d565b610ca8576040516282b42960e81b815260040160405180910390fd5b6000878152600560205260409020600181015415610cd95760405163119b4fd360e11b815260040160405180910390fd5b6040518060c00160405280898152602001888880806020026020016040519081016040528093929190818152602001838360200280828437600092019190915250505090825250604080516020888102828101820190935288825292830192909189918991829185019084908082843760009201829052509385525050506001600160a01b038516602080840191909152604080840183905260609093018790528b825260058152919020825181558282015180519192610da29260018501929091019061126e565b5060408201518051610dbe9160028401916020909101906112d3565b5060608201516003820180546001600160a01b0319166001600160a01b039092169190911790556080820151600482015560a09091015160059091015560405188907fff39e0eaf58742100b3d96f355f818806f2c4c75c3fb9c8ff1101305924884fa90600090a25050505050505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610e6f575060131936013560601c90565b503390565b905090565b3390565b6000610e74610e30565b8154600090815b81811015610ee957836001600160a01b0316858281548110610eb257610eb2611693565b6000918252602090912001546001600160a01b031603610ed757600192505050610575565b80610ee18161167a565b915050610e8e565b506000949350505050565b610f0581610f00610e7d565b611067565b50565b610f128282610b04565b61078b576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610f49610e7d565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610f978282610b04565b1561078b576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610fcc610e7d565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b60008184846040516020016110269291906116d9565b6040516020818303038152906040528051906020012060001c61104991906116ff565b949350505050565b6000818310611061575081610575565b50919050565b6110718282610b04565b61078b57611089816001600160a01b031660146110cb565b6110948360206110cb565b6040516020016110a5929190611721565b60408051601f198184030181529082905262461bcd60e51b825261077891600401611796565b606060006110da8360026117c9565b6110e5906002611649565b67ffffffffffffffff8111156110fd576110fd6117e8565b6040519080825280601f01601f191660200182016040528015611127576020820181803683370190505b509050600360fc1b8160008151811061114257611142611693565b60200101906001600160f81b031916908160001a905350600f60fb1b8160018151811061117157611171611693565b60200101906001600160f81b031916908160001a90535060006111958460026117c9565b6111a0906001611649565b90505b6001811115611218576f181899199a1a9b1b9c1cb0b131b232b360811b85600f16601081106111d4576111d4611693565b1a60f81b8282815181106111ea576111ea611693565b60200101906001600160f81b031916908160001a90535060049490941c93611211816117fe565b90506111a3565b5083156112675760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e746044820152606401610778565b9392505050565b8280548282559060005260206000209081019282156112c3579160200282015b828111156112c357825182546001600160a01b0319166001600160a01b0390911617825560209092019160019091019061128e565b506112cf92915061130e565b5090565b8280548282559060005260206000209081019282156112c3579160200282015b828111156112c35782518255916020019190600101906112f3565b5b808211156112cf576000815560010161130f565b60006020828403121561133557600080fd5b5035919050565b60006020828403121561134e57600080fd5b81356001600160e01b03198116811461126757600080fd5b8035600781900b811461137857600080fd5b919050565b60008060006060848603121561139257600080fd5b833592506113a260208501611366565b91506113b060408501611366565b90509250925092565b80356001600160a01b038116811461137857600080fd5b600080604083850312156113e357600080fd5b823591506113f3602084016113b9565b90509250929050565b6020808252825182820181905260009190848201906040850190845b8181101561143457835183529284019291840191600101611418565b50909695505050505050565b60006020828403121561145257600080fd5b611267826113b9565b60008060006060848603121561147057600080fd5b505081359360208301359350604090920135919050565b60008083601f84011261149957600080fd5b50813567ffffffffffffffff8111156114b157600080fd5b6020830191508360208260051b85010111156114cc57600080fd5b9250929050565b600080600080600080600060a0888a0312156114ee57600080fd5b87359650602088013567ffffffffffffffff8082111561150d57600080fd5b6115198b838c01611487565b909850965060408a013591508082111561153257600080fd5b5061153f8a828b01611487565b90955093505060608801359150611558608089016113b9565b905092959891949750929550565b6020808252825182820181905260009190848201906040850190845b818110156114345783516001600160a01b031683529284019291840191600101611582565b600080604083850312156115ba57600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b8281101561162657815180516001600160a01b0316855286810151600790810b8887015290860151900b85850152606090930192908501906001016115e6565b5091979650505050505050565b634e487b7160e01b600052601160045260246000fd5b6000821982111561165c5761165c611633565b500190565b60006020828403121561167357600080fd5b5051919050565b60006001820161168c5761168c611633565b5060010190565b634e487b7160e01b600052603260045260246000fd5b60005b838110156116c45781810151838201526020016116ac565b838111156116d3576000848401525b50505050565b828152600082516116f18160208501602087016116a9565b919091016020019392505050565b60008261171c57634e487b7160e01b600052601260045260246000fd5b500690565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516117598160178501602088016116a9565b7001034b99036b4b9b9b4b733903937b6329607d1b601791840191820152835161178a8160288401602088016116a9565b01602801949350505050565b60208152600082518060208401526117b58160408501602087016116a9565b601f01601f19169190910160400192915050565b60008160001904831182151516156117e3576117e3611633565b500290565b634e487b7160e01b600052604160045260246000fd5b60008161180d5761180d611633565b50600019019056fea26469706673582212207da21a376c41408c1dc1be87d326f2f5476cb8cf0be31d03e004e9ebd7ac0cdc64736f6c634300080e0033";

export class DelphsTable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    trustedForwarder: string,
    diceRollerAddress: string,
    initialOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DelphsTable> {
    return super.deploy(
      trustedForwarder,
      diceRollerAddress,
      initialOwner,
      overrides || {}
    ) as Promise<DelphsTable>;
  }
  getDeployTransaction(
    trustedForwarder: string,
    diceRollerAddress: string,
    initialOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      trustedForwarder,
      diceRollerAddress,
      initialOwner,
      overrides || {}
    );
  }
  attach(address: string): DelphsTable {
    return super.attach(address) as DelphsTable;
  }
  connect(signer: Signer): DelphsTable__factory {
    return super.connect(signer) as DelphsTable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelphsTableInterface {
    return new utils.Interface(_abi) as DelphsTableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelphsTable {
    return new Contract(address, _abi, signerOrProvider) as DelphsTable;
  }
}
