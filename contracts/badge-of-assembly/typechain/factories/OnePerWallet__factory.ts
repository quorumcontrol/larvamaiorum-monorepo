/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { OnePerWallet, OnePerWalletInterface } from "../OnePerWallet";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_badgerContract",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyClaimed",
    type: "error",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "tokenID",
        type: "uint256",
      },
    ],
    name: "mint",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "mints",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b506040516102e83803806102e883398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b60805161025d61008b600039600061011f015261025d6000f3fe608060405234801561001057600080fd5b50600436106100365760003560e01c806314ef237e1461003b57806340c10f191461007a575b600080fd5b6100666100493660046101af565b600060208181529281526040808220909352908152205460ff1681565b604051901515815260200160405180910390f35b6100666100883660046101db565b6000818152602081815260408083206001600160a01b038616845290915281205460ff16156100ca57604051630c8d9eab60e31b815260040160405180910390fd5b6000828152602081815260408083206001600160a01b038781168086529190935292819020805460ff191660019081179091559051630ab714fb60e11b815260048101939093526024830185905260448301527f0000000000000000000000000000000000000000000000000000000000000000169063156e29f6906064016020604051808303816000875af1158015610168573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061018c9190610205565b9392505050565b80356001600160a01b03811681146101aa57600080fd5b919050565b600080604083850312156101c257600080fd5b823591506101d260208401610193565b90509250929050565b600080604083850312156101ee57600080fd5b6101f783610193565b946020939093013593505050565b60006020828403121561021757600080fd5b8151801515811461018c57600080fdfea264697066735822122038f4667f1db16fc0d7305813c2dbe6a327b36a9dd80f883a35511853c42c275864736f6c634300080e0033";

export class OnePerWallet__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _badgerContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<OnePerWallet> {
    return super.deploy(
      _badgerContract,
      overrides || {}
    ) as Promise<OnePerWallet>;
  }
  getDeployTransaction(
    _badgerContract: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(_badgerContract, overrides || {});
  }
  attach(address: string): OnePerWallet {
    return super.attach(address) as OnePerWallet;
  }
  connect(signer: Signer): OnePerWallet__factory {
    return super.connect(signer) as OnePerWallet__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): OnePerWalletInterface {
    return new utils.Interface(_abi) as OnePerWalletInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): OnePerWallet {
    return new Contract(address, _abi, signerOrProvider) as OnePerWallet;
  }
}
