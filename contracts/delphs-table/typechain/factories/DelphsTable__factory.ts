/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { DelphsTable, DelphsTableInterface } from "../DelphsTable";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
      {
        internalType: "address",
        name: "diceRollerAddress",
        type: "address",
      },
      {
        internalType: "address",
        name: "initialOwner",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "AlreadyExists",
    type: "error",
  },
  {
    inputs: [],
    name: "AlreadyStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "CantCreateAlreadyStarted",
    type: "error",
  },
  {
    inputs: [],
    name: "NoTwoRollsPerBlock",
    type: "error",
  },
  {
    inputs: [],
    name: "Unauthorized",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "uint256",
        name: "index",
        type: "uint256",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "blockNumber",
        type: "uint256",
      },
      {
        indexed: false,
        internalType: "bytes32",
        name: "random",
        type: "bytes32",
      },
    ],
    name: "DiceRolled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "previousAdminRole",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "bytes32",
        name: "newAdminRole",
        type: "bytes32",
      },
    ],
    name: "RoleAdminChanged",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleGranted",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "address",
        name: "account",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "sender",
        type: "address",
      },
    ],
    name: "RoleRevoked",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "roll",
        type: "uint256",
      },
    ],
    name: "Started",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "TableCreated",
    type: "event",
  },
  {
    inputs: [],
    name: "ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "DEFAULT_ADMIN_ROLE",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "blockOfRoll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "players",
            type: "address[]",
          },
          {
            internalType: "bytes32[]",
            name: "seeds",
            type: "bytes32[]",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameLength",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "tableSize",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "wootgumpMultiplier",
            type: "uint32",
          },
        ],
        internalType: "struct DelphsTable.Table",
        name: "newTable",
        type: "tuple",
      },
    ],
    name: "createAndStart",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        components: [
          {
            internalType: "bytes32",
            name: "id",
            type: "bytes32",
          },
          {
            internalType: "address[]",
            name: "players",
            type: "address[]",
          },
          {
            internalType: "bytes32[]",
            name: "seeds",
            type: "bytes32[]",
          },
          {
            internalType: "address",
            name: "owner",
            type: "address",
          },
          {
            internalType: "uint256",
            name: "startedAt",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "gameLength",
            type: "uint256",
          },
          {
            internalType: "uint32",
            name: "tableSize",
            type: "uint32",
          },
          {
            internalType: "uint32",
            name: "wootgumpMultiplier",
            type: "uint32",
          },
        ],
        internalType: "struct DelphsTable.Table",
        name: "newTable",
        type: "tuple",
      },
    ],
    name: "createTable",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "destinations",
    outputs: [
      {
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        internalType: "int64",
        name: "x",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "y",
        type: "int64",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "uint256",
        name: "roll",
        type: "uint256",
      },
    ],
    name: "destinationsForRoll",
    outputs: [
      {
        components: [
          {
            internalType: "address",
            name: "player",
            type: "address",
          },
          {
            internalType: "int64",
            name: "x",
            type: "int64",
          },
          {
            internalType: "int64",
            name: "y",
            type: "int64",
          },
        ],
        internalType: "struct DelphsTable.Destination[]",
        name: "",
        type: "tuple[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
    ],
    name: "getRoleAdmin",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "grantRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "hasRole",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "latestRoll",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "players",
    outputs: [
      {
        internalType: "address[]",
        name: "",
        type: "address[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "renounceRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "role",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "account",
        type: "address",
      },
    ],
    name: "revokeRole",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rollTheDice",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "roller",
    outputs: [
      {
        internalType: "contract IDiceRoller",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "rolls",
    outputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "seeds",
    outputs: [
      {
        internalType: "bytes32[]",
        name: "",
        type: "bytes32[]",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "int64",
        name: "x",
        type: "int64",
      },
      {
        internalType: "int64",
        name: "y",
        type: "int64",
      },
    ],
    name: "setDestination",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
    ],
    name: "start",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "playerAddress",
        type: "address",
      },
    ],
    name: "statsForPlayer",
    outputs: [
      {
        components: [
          {
            internalType: "uint256",
            name: "attack",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "defense",
            type: "uint256",
          },
          {
            internalType: "uint256",
            name: "health",
            type: "uint256",
          },
        ],
        internalType: "struct DelphsTable.Stats",
        name: "",
        type: "tuple",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes4",
        name: "interfaceId",
        type: "bytes4",
      },
    ],
    name: "supportsInterface",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes32",
        name: "",
        type: "bytes32",
      },
    ],
    name: "tables",
    outputs: [
      {
        internalType: "bytes32",
        name: "id",
        type: "bytes32",
      },
      {
        internalType: "address",
        name: "owner",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "startedAt",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gameLength",
        type: "uint256",
      },
      {
        internalType: "uint32",
        name: "tableSize",
        type: "uint32",
      },
      {
        internalType: "uint32",
        name: "wootgumpMultiplier",
        type: "uint32",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c06040523480156200001157600080fd5b5060405162001ab038038062001ab08339810160408190526200003491620001b0565b6001600160a01b03808416608052821660a052620000737fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217758262000089565b6200008060008262000089565b505050620001fa565b62000095828262000099565b5050565b6000828152602081815260408083206001600160a01b038516845290915290205460ff1662000095576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055620000f76200013b565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b6000620001526200015760201b62000d6b1760201c565b905090565b6080516000906001600160a01b031633036200017a575060131936013560601c90565b620001526200018f60201b62000db41760201c565b3390565b80516001600160a01b0381168114620001ab57600080fd5b919050565b600080600060608486031215620001c657600080fd5b620001d18462000193565b9250620001e16020850162000193565b9150620001f16040850162000193565b90509250925092565b60805160a0516118826200022e6000396000818161020101526108690152600081816102930152610d6f01526118826000f3fe608060405234801561001057600080fd5b50600436106101585760003560e01c80637213b814116100c35780639424732e1161007c5780639424732e146103bc578063a217fddf146103dc578063ae383a4d146103e4578063d3098b9a146103ed578063d547741f14610485578063e0e543d01461049857600080fd5b80637213b814146102f657806375b238fc146103325780637d789dee14610359578063907efe001461036157806391d14854146103965780639238cc39146103a957600080fd5b80632f2ff15d116101155780632f2ff15d1461023b578063361508521461025057806336568abe14610270578063572b6c05146102835780635d69f16c146102c35780636906f99c146102e357600080fd5b8063015a18ed1461015d57806301ffc9a71461018357806313870132146101a6578063248a9ca3146101b95780632d1dc122146101dc5780632f09177d146101fc575b600080fd5b61017061016b3660046111a9565b6104b8565b6040519081526020015b60405180910390f35b6101966101913660046111c2565b610574565b604051901515815260200161017a565b6101966101b4366004611203565b6105ab565b6101706101c73660046111a9565b60009081526020819052604090206001015490565b6101706101ea3660046111a9565b60036020526000908152604090205481565b6102237f000000000000000000000000000000000000000000000000000000000000000081565b6040516001600160a01b03909116815260200161017a565b61024e610249366004611254565b61069d565b005b61026361025e3660046111a9565b6106c7565b60405161017a9190611284565b61024e61027e366004611254565b61072c565b6101966102913660046112c8565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6101706102d13660046111a9565b60026020526000908152604090205481565b61024e6102f13660046112e5565b6107bf565b610309610304366004611321565b6107d2565b604080516001600160a01b039094168452600792830b6020850152910b9082015260600161017a565b6101707fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c2177581565b610170610833565b61037461036f366004611254565b610994565b604080518251815260208084015190820152918101519082015260600161017a565b6101966103a4366004611254565b610b25565b61024e6103b73660046112e5565b610b4e565b6103cf6103ca3660046111a9565b610c38565b60405161017a919061134d565b610170600081565b61017060015481565b6104476103fb3660046111a9565b60056020819052600091825260409091208054600382015460048301549383015460069093015491936001600160a01b0390911692909163ffffffff8082169164010000000090041686565b604080519687526001600160a01b03909516602087015293850192909252606084015263ffffffff90811660808401521660a082015260c00161017a565b61024e610493366004611254565b610ca6565b6104ab6104a636600461138e565b610ccb565b60405161017a91906113b0565b600081815260056020526040812060038101546001600160a01b03166104dc610db8565b6001600160a01b031614610502576040516282b42960e81b815260040160405180910390fd5b60048101541561052557604051631fbde44560e01b815260040160405180910390fd5b600060015460016105369190611430565b60048301819055604051909150819085907f3a5803cb6dcb9c83b0584d712b7825e7e9fa6243be3cde9e798681f5c091e65c90600090a39392505050565b60006001600160e01b03198216637965db0b60e01b14806105a557506301ffc9a760e01b6001600160e01b03198316145b92915050565b6000806105b6610db8565b60008681526005602052604090209091506105d46001820183610dc2565b6105f0576040516282b42960e81b815260040160405180910390fd5b50600094855260046020908152604080872060018054895290835281882082516060810184526001600160a01b039586168152600798890b8186019081529790980b92880192835280548083018255908952929097209551600290920290950180549451919092166001600160e01b031990941693909317600160a01b67ffffffffffffffff948516021781559251928401805467ffffffffffffffff1916939092169290921790555090565b6000828152602081905260409020600101546106b881610e2f565b6106c28383610e43565b505050565b60008181526005602090815260409182902060020180548351818402810184019094528084526060939283018282801561072057602002820191906000526020600020905b81548152602001906001019080831161070c575b50505050509050919050565b610734610db8565b6001600160a01b0316816001600160a01b0316146107b15760405162461bcd60e51b815260206004820152602f60248201527f416363657373436f6e74726f6c3a2063616e206f6e6c792072656e6f756e636560448201526e103937b632b9903337b91039b2b63360891b60648201526084015b60405180910390fd5b6107bb8282610ec8565b5050565b6107c881610b4e565b6107bb81356104b8565b600460205282600052604060002060205281600052604060002081815481106107fa57600080fd5b6000918252602090912060029091020180546001909101546001600160a01b0382169450600160a01b909104600790810b93500b905083565b600154600090815260036020526040812054439003610865576040516374f70e7960e11b815260040160405180910390fd5b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663aacc5a176040518163ffffffff1660e01b8152600401602060405180830381865afa1580156108c5573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108e99190611448565b9050806002600060015460016108ff9190611430565b815260200190815260200160002081905550436003600060015460016109259190611430565b8152602001908152602001600020819055506001600081548092919061094a90611461565b9190505550436001547f61a648c0140ef625babe35b3bc5ba2a28852bd10a17c53f6d9f3831b21096cd78360405161098491815260200190565b60405180910390a3505060015490565b6109b860405180606001604052806000815260200160008152602001600081525090565b60008381526005602090815260408083206004810154845260029092529091205480610a155760405162461bcd60e51b815260206004820152600c60248201526b1b9bc81cdd185d1cc81e595d60a21b60448201526064016107a8565b604080516060810190915280610a71610a6984610a52896080860160609190911b6001600160601b0319168152606160f81b601482015260150190565b6040516020818303038152906040526103e8610f4b565b610190610f8c565b8152602001610ac9610ac28488604051602001610aab919060609190911b6001600160601b0319168152601960fa1b601482015260150190565b604051602081830303815290604052610320610f4b565b60c8610f8c565b8152602001610b1a610ac28488604051602001610b03919060609190911b6001600160601b0319168152600d60fb1b601482015260150190565b6040516020818303038152906040526102bc610f4b565b905295945050505050565b6000918252602082815260408084206001600160a01b0393909316845291905290205460ff1690565b608081013515610b7157604051630f0b92ed60e21b815260040160405180910390fd5b610b9d7fa49807205ce4d355092ef5a8a18f56e8913cf4a201fbe287825b095693c217756103a4610db8565b610bb9576040516282b42960e81b815260040160405180910390fd5b803560009081526005602052604090206001015415610beb5760405163119b4fd360e11b815260040160405180910390fd5b803560009081526005602052604090208190610c0782826115c1565b50506040518135907fff39e0eaf58742100b3d96f355f818806f2c4c75c3fb9c8ff1101305924884fa90600090a250565b60008181526005602090815260409182902060010180548351818402810184019094528084526060939283018282801561072057602002820191906000526020600020905b81546001600160a01b03168152600190910190602001808311610c7d5750505050509050919050565b600082815260208190526040902060010154610cc181610e2f565b6106c28383610ec8565b60008281526004602090815260408083208484528252808320805482518185028101850190935280835260609492939192909184015b82821015610d5f576000848152602090819020604080516060810182526002860290920180546001600160a01b0381168452600160a01b9004600790810b84860152600191820154900b918301919091529083529092019101610d01565b50505050905092915050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610daa575060131936013560601c90565b503390565b905090565b3390565b6000610daf610d6b565b8154600090815b81811015610e2457836001600160a01b0316858281548110610ded57610ded6116ff565b6000918252602090912001546001600160a01b031603610e12576001925050506105a5565b80610e1c81611461565b915050610dc9565b506000949350505050565b610e4081610e3b610db8565b610fa2565b50565b610e4d8282610b25565b6107bb576000828152602081815260408083206001600160a01b03851684529091529020805460ff19166001179055610e84610db8565b6001600160a01b0316816001600160a01b0316837f2f8788117e7eff1d82e926ec794901d17c78024a50270940304540a733656f0d60405160405180910390a45050565b610ed28282610b25565b156107bb576000828152602081815260408083206001600160a01b03851684529091529020805460ff19169055610f07610db8565b6001600160a01b0316816001600160a01b0316837ff6391f5c32d9c69d2a47ea670b442974b53935d1edc7fd64eb21e047a839171b60405160405180910390a45050565b6000818484604051602001610f61929190611745565b6040516020818303038152906040528051906020012060001c610f84919061176b565b949350505050565b6000818310610f9c5750816105a5565b50919050565b610fac8282610b25565b6107bb57610fc4816001600160a01b03166014611006565b610fcf836020611006565b604051602001610fe092919061178d565b60408051601f198184030181529082905262461bcd60e51b82526107a891600401611802565b606060006110158360026114e1565b611020906002611430565b67ffffffffffffffff811115611038576110386114cb565b6040519080825280601f01601f191660200182016040528015611062576020820181803683370190505b509050600360fc1b8160008151811061107d5761107d6116ff565b60200101906001600160f81b031916908160001a905350600f60fb1b816001815181106110ac576110ac6116ff565b60200101906001600160f81b031916908160001a90535060006110d08460026114e1565b6110db906001611430565b90505b6001811115611153576f181899199a1a9b1b9c1cb0b131b232b360811b85600f166010811061110f5761110f6116ff565b1a60f81b828281518110611125576111256116ff565b60200101906001600160f81b031916908160001a90535060049490941c9361114c81611835565b90506110de565b5083156111a25760405162461bcd60e51b815260206004820181905260248201527f537472696e67733a20686578206c656e67746820696e73756666696369656e7460448201526064016107a8565b9392505050565b6000602082840312156111bb57600080fd5b5035919050565b6000602082840312156111d457600080fd5b81356001600160e01b0319811681146111a257600080fd5b8035600781900b81146111fe57600080fd5b919050565b60008060006060848603121561121857600080fd5b83359250611228602085016111ec565b9150611236604085016111ec565b90509250925092565b6001600160a01b0381168114610e4057600080fd5b6000806040838503121561126757600080fd5b8235915060208301356112798161123f565b809150509250929050565b6020808252825182820181905260009190848201906040850190845b818110156112bc578351835292840192918401916001016112a0565b50909695505050505050565b6000602082840312156112da57600080fd5b81356111a28161123f565b6000602082840312156112f757600080fd5b813567ffffffffffffffff81111561130e57600080fd5b820161010081850312156111a257600080fd5b60008060006060848603121561133657600080fd5b505081359360208301359350604090920135919050565b6020808252825182820181905260009190848201906040850190845b818110156112bc5783516001600160a01b031683529284019291840191600101611369565b600080604083850312156113a157600080fd5b50508035926020909101359150565b602080825282518282018190526000919060409081850190868401855b8281101561140d57815180516001600160a01b0316855286810151600790810b8887015290860151900b85850152606090930192908501906001016113cd565b5091979650505050505050565b634e487b7160e01b600052601160045260246000fd5b600082198211156114435761144361141a565b500190565b60006020828403121561145a57600080fd5b5051919050565b6000600182016114735761147361141a565b5060010190565b6000808335601e1984360301811261149157600080fd5b83018035915067ffffffffffffffff8211156114ac57600080fd5b6020019150600581901b36038213156114c457600080fd5b9250929050565b634e487b7160e01b600052604160045260246000fd5b60008160001904831182151516156114fb576114fb61141a565b500290565b600081356105a58161123f565b80546001600160a01b0319166001600160a01b0392909216919091179055565b600160401b831115611541576115416114cb565b805483825580841015611578576000828152602081208581019083015b808210156115745782825560018201915061155e565b5050505b5060008181526020812083915b858110156115a3578235825560209092019160019182019101611585565b505050505050565b6000813563ffffffff811681146105a557600080fd5b81358155600180820160206115d88186018661147a565b600160401b8111156115ec576115ec6114cb565b8354818555808210156116205760008581528481208381019083015b8082101561161c5782825590880190611608565b5050505b50600093845260208420935b818110156116555761164661164084611500565b8661150d565b9385019391830191850161162c565b505050505050611668604083018361147a565b61167681836002860161152d565b505061169061168760608401611500565b6003830161150d565b6080820135600482015560a08201356005820155600681016116ce6116b760c085016115ab565b825463ffffffff191663ffffffff91909116178255565b6106c26116dd60e085016115ab565b825467ffffffff00000000191660209190911b67ffffffff0000000016178255565b634e487b7160e01b600052603260045260246000fd5b60005b83811015611730578181015183820152602001611718565b8381111561173f576000848401525b50505050565b8281526000825161175d816020850160208701611715565b919091016020019392505050565b60008261178857634e487b7160e01b600052601260045260246000fd5b500690565b7f416363657373436f6e74726f6c3a206163636f756e74200000000000000000008152600083516117c5816017850160208801611715565b7001034b99036b4b9b9b4b733903937b6329607d1b60179184019182015283516117f6816028840160208801611715565b01602801949350505050565b6020815260008251806020840152611821816040850160208701611715565b601f01601f19169190910160400192915050565b6000816118445761184461141a565b50600019019056fea2646970667358221220f6a3feb03fabd6fc390c56125cb15203dd658bbfa451dfcb97027e38306bea0a64736f6c634300080e0033";

export class DelphsTable__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    trustedForwarder: string,
    diceRollerAddress: string,
    initialOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<DelphsTable> {
    return super.deploy(
      trustedForwarder,
      diceRollerAddress,
      initialOwner,
      overrides || {}
    ) as Promise<DelphsTable>;
  }
  getDeployTransaction(
    trustedForwarder: string,
    diceRollerAddress: string,
    initialOwner: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      trustedForwarder,
      diceRollerAddress,
      initialOwner,
      overrides || {}
    );
  }
  attach(address: string): DelphsTable {
    return super.attach(address) as DelphsTable;
  }
  connect(signer: Signer): DelphsTable__factory {
    return super.connect(signer) as DelphsTable__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): DelphsTableInterface {
    return new utils.Interface(_abi) as DelphsTableInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): DelphsTable {
    return new Contract(address, _abi, signerOrProvider) as DelphsTable;
  }
}
