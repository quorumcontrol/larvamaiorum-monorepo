/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Player, PlayerInterface } from "../Player";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "trustedForwarder",
        type: "address",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    inputs: [],
    name: "UsernameAlreadyClaimed",
    type: "error",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: true,
        internalType: "uint256",
        name: "team",
        type: "uint256",
      },
    ],
    name: "TeamSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "player",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "username",
        type: "string",
      },
    ],
    name: "UserNameSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "forwarder",
        type: "address",
      },
    ],
    name: "isTrustedForwarder",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "name",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_team",
        type: "uint256",
      },
    ],
    name: "setTeam",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_name",
        type: "string",
      },
    ],
    name: "setUsername",
    outputs: [
      {
        internalType: "bool",
        name: "",
        type: "bool",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "team",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    name: "usernameToAddress",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60a060405234801561001057600080fd5b5060405161086038038061086083398101604081905261002f91610040565b6001600160a01b0316608052610070565b60006020828403121561005257600080fd5b81516001600160a01b038116811461006957600080fd5b9392505050565b6080516107cf6100916000396000818160ce01526103d501526107cf6000f3fe608060405234801561001057600080fd5b50600436106100625760003560e01c806301984892146100675780633de9492514610090578063572b6c05146100be578063aee09dcb1461010e578063ed59313a14610121578063f825f14314610134575b600080fd5b61007a6100753660046104ae565b610180565b60405161008791906104de565b60405180910390f35b6100b061009e3660046104ae565b60026020526000908152604090205481565b604051908152602001610087565b6100fe6100cc3660046104ae565b7f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0390811691161490565b6040519015158152602001610087565b6100fe61011c366004610533565b61021a565b6100fe61012f36600461054c565b610274565b6101686101423660046105d4565b80516020818301810180516001825292820191909301209152546001600160a01b031681565b6040516001600160a01b039091168152602001610087565b6000602081905290815260409020805461019990610685565b80601f01602080910402602001604051908101604052809291908181526020018280546101c590610685565b80156102125780601f106101e757610100808354040283529160200191610212565b820191906000526020600020905b8154815290600101906020018083116101f557829003601f168201915b505050505081565b6000806102256103d1565b6001600160a01b0381166000818152600260205260408082208790555192935085927f18672b782112bd4aa6ee68ab3a9d9a700661843cdc0873f0dadf6773de8dc5599190a350600192915050565b60008061027f6103d1565b90506000600185856040516102959291906106bf565b908152604051908190036020019020546001600160a01b03908116915082168114806102c857506001600160a01b038116155b6102e557604051634804ba5b60e01b815260040160405180910390fd5b6001600160a01b03821660009081526020819052604090819020905160019161030d916106cf565b908152604080516020928190038301902080546001600160a01b03191690556001600160a01b038416600090815291829052902061034c908686610415565b5081600186866040516103609291906106bf565b90815260405190819003602001812080546001600160a01b039384166001600160a01b0319909116179055908316907f55633e294f3ce7de0841784584a845596fec2f4a663a2e0415d1aaf6455a4787906103be908890889061076a565b60405180910390a2506001949350505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03163303610410575060131936013560601c90565b503390565b82805461042190610685565b90600052602060002090601f0160209004810192826104435760008555610489565b82601f1061045c5782800160ff19823516178555610489565b82800160010185558215610489579182015b8281111561048957823582559160200191906001019061046e565b50610495929150610499565b5090565b5b80821115610495576000815560010161049a565b6000602082840312156104c057600080fd5b81356001600160a01b03811681146104d757600080fd5b9392505050565b600060208083528351808285015260005b8181101561050b578581018301518582016040015282016104ef565b8181111561051d576000604083870101525b50601f01601f1916929092016040019392505050565b60006020828403121561054557600080fd5b5035919050565b6000806020838503121561055f57600080fd5b823567ffffffffffffffff8082111561057757600080fd5b818501915085601f83011261058b57600080fd5b81358181111561059a57600080fd5b8660208285010111156105ac57600080fd5b60209290920196919550909350505050565b634e487b7160e01b600052604160045260246000fd5b6000602082840312156105e657600080fd5b813567ffffffffffffffff808211156105fe57600080fd5b818401915084601f83011261061257600080fd5b813581811115610624576106246105be565b604051601f8201601f19908116603f0116810190838211818310171561064c5761064c6105be565b8160405282815287602084870101111561066557600080fd5b826020860160208301376000928101602001929092525095945050505050565b600181811c9082168061069957607f821691505b6020821081036106b957634e487b7160e01b600052602260045260246000fd5b50919050565b8183823760009101908152919050565b600080835481600182811c9150808316806106eb57607f831692505b6020808410820361070a57634e487b7160e01b86526022600452602486fd5b81801561071e576001811461072f5761075c565b60ff1986168952848901965061075c565b60008a81526020902060005b868110156107545781548b82015290850190830161073b565b505084890196505b509498975050505050505050565b60208152816020820152818360408301376000818301604090810191909152601f909201601f1916010191905056fea2646970667358221220db53eb7d55124d6a5ff4eff5f17623583d4290199bc802cad46483bf7578706f64736f6c634300080e0033";

export class Player__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Player> {
    return super.deploy(trustedForwarder, overrides || {}) as Promise<Player>;
  }
  getDeployTransaction(
    trustedForwarder: string,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(trustedForwarder, overrides || {});
  }
  attach(address: string): Player {
    return super.attach(address) as Player;
  }
  connect(signer: Signer): Player__factory {
    return super.connect(signer) as Player__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PlayerInterface {
    return new utils.Interface(_abi) as PlayerInterface;
  }
  static connect(address: string, signerOrProvider: Signer | Provider): Player {
    return new Contract(address, _abi, signerOrProvider) as Player;
  }
}
