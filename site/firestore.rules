rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {

    function allowedToMakeMove(player, tableId) {
      let latestRoll = get(/databases/$(database)/documents/rolls/latest).data.roll;
      let table = get(/databases/$(database)/documents/tables/$(tableId)).data;
      return request.auth.uid == player &&
        player in table.players &&
          request.resource.data.diff(resource.data).affectedKeys().hasOnly([string(latestRoll)]);
    }

    match /rolls/{roll} {
      allow read;
    }

    match /tables/{tableId=**} {
      allow read;
    }

    match /playerLocations/{player} {
      allow read;
    }

    match /delphsLobby/{player} {
      allow read, list;
      allow write: if request.auth.uid == player;
    }

    match /tables/{tableId}/moves/{player} {
      // allow write: if request.auth.uid == player && (player in get(/databases/$(database)/documents/tables/$(tableId)).data.players);
      allow write: if allowedToMakeMove(player, tableId); 
    }

    match /{document=**} {
      allow read, write: if false;
    }
  }
}